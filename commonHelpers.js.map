{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\n// Library\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Code\n\nlet userSelectedDate;\nconst startBtn = document.getElementById('start-btn');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate <= currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nstartBtn.disabled = true;\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', () => {\n  const currentDate = new Date();\n  let timeDifference = userSelectedDate - currentDate;\n  if (timeDifference < 0) {\n    return;\n  }\n\n  updateTimer(timeDifference);\n\n  let timerInterval = setInterval(() => {\n    timeDifference -= 1000;\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);\n      iziToast.success({\n        title: 'Success',\n        message: 'Timer finished!',\n      });\n      startBtn.disabled = true;\n    } else {\n      updateTimer(timeDifference);\n    }\n  }, 1000);\n});\n\nfunction addLeadingZero(value) {\n  return value < 10 ? '0' + value : value;\n}\n\nfunction updateTimer(timeDifference) {\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  document.getElementById('days').textContent = addLeadingZero(days);\n  document.getElementById('hours').textContent = addLeadingZero(hours);\n  document.getElementById('minutes').textContent = addLeadingZero(minutes);\n  document.getElementById('seconds').textContent = addLeadingZero(seconds);\n}\n"],"names":["userSelectedDate","startBtn","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","timeDifference","updateTimer","timerInterval","addLeadingZero","value"],"mappings":"sGAYA,IAAIA,EACJ,MAAMC,EAAW,SAAS,eAAe,WAAW,EAE9CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,GADgB,IAAI,MAEtBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDH,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAA,EAAS,SAAW,GAEpBI,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAV,EAAS,iBAAiB,QAAS,IAAM,CAEvC,IAAIW,EAAiBZ,EADD,IAAI,KAExB,GAAIY,EAAiB,EACnB,OAGFC,EAAYD,CAAc,EAE1B,IAAIE,EAAgB,YAAY,IAAM,CACpCF,GAAkB,IAEdA,GAAkB,GACpB,cAAcE,CAAa,EAC3BV,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,iBACjB,CAAO,EACDH,EAAS,SAAW,IAEpBY,EAAYD,CAAc,CAE7B,EAAE,GAAI,CACT,CAAC,EAED,SAASG,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,CACpC,CAEA,SAASH,EAAYD,EAAgB,CACnC,KAAM,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUM,CAAc,EAClE,SAAS,eAAe,MAAM,EAAE,YAAcG,EAAeP,CAAI,EACjE,SAAS,eAAe,OAAO,EAAE,YAAcO,EAAeN,CAAK,EACnE,SAAS,eAAe,SAAS,EAAE,YAAcM,EAAeL,CAAO,EACvE,SAAS,eAAe,SAAS,EAAE,YAAcK,EAAeJ,CAAO,CACzE"}